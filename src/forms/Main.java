/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/MDIApplication.java to edit this template
 */
package forms;

import java.util.Map;
import services.ChambreService;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import entities.Reservation;
import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.util.List;
import java.text.SimpleDateFormat;
import services.ReservationService;

/**
 *
 * @author tahat
 */
public class Main extends javax.swing.JFrame {
    ChambreService chs;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setTitle("Gestion De Reservation");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        softBevelBorder1 = new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED);
        desktopPane = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        statsBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        quitBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        clientBtn = new javax.swing.JButton();
        ChambreBtn = new javax.swing.JButton();
        rsvBtn = new javax.swing.JButton();
        catBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        manageMenu = new javax.swing.JMenu();
        clientMenuItem = new javax.swing.JMenuItem();
        categorieMenuItem = new javax.swing.JMenuItem();
        chambreMenuItem = new javax.swing.JMenuItem();
        reservationMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        searchMenuItem = new javax.swing.JMenuItem();
        statsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        desktopPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Gestion Des Reservations");
        desktopPane.add(jLabel2);
        jLabel2.setBounds(90, 10, 600, 70);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new java.awt.CardLayout(15, 15));

        jPanel3.setLayout(new java.awt.GridLayout(4, 0, 0, 15));

        statsBtn.setText("Afficher les Statistique");
        statsBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        statsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsBtnActionPerformed(evt);
            }
        });
        jPanel3.add(statsBtn);

        exportBtn.setText("Exporter les reservation");
        exportBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });
        jPanel3.add(exportBtn);

        logoutBtn.setText("Se Déconnecter");
        logoutBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });
        jPanel3.add(logoutBtn);

        quitBtn.setText("Quitter");
        quitBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        quitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBtnActionPerformed(evt);
            }
        });
        jPanel3.add(quitBtn);

        jPanel2.add(jPanel3, "card2");

        desktopPane.add(jPanel2);
        jPanel2.setBounds(450, 200, 210, 290);
        desktopPane.add(jSeparator1);
        jSeparator1.setBounds(0, 140, 800, 10);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Tableau de bord");
        desktopPane.add(jLabel3);
        jLabel3.setBounds(310, 100, 140, 25);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.CardLayout(15, 15));

        jPanel5.setLayout(new java.awt.GridLayout(4, 0, 0, 15));

        clientBtn.setText("Gérer les Client");
        clientBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientBtnActionPerformed(evt);
            }
        });
        jPanel5.add(clientBtn);

        ChambreBtn.setText("Gérer lee Chambres");
        ChambreBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ChambreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChambreBtnActionPerformed(evt);
            }
        });
        jPanel5.add(ChambreBtn);

        rsvBtn.setText("Gérer les Reservations");
        rsvBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rsvBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rsvBtnActionPerformed(evt);
            }
        });
        jPanel5.add(rsvBtn);

        catBtn.setText("Gérer les Categories");
        catBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        catBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catBtnActionPerformed(evt);
            }
        });
        jPanel5.add(catBtn);

        jPanel4.add(jPanel5, "card2");

        desktopPane.add(jPanel4);
        jPanel4.setBounds(120, 200, 210, 290);

        manageMenu.setMnemonic('f');
        manageMenu.setText("Gérer");

        clientMenuItem.setMnemonic('o');
        clientMenuItem.setText("Client");
        clientMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientMenuItemActionPerformed(evt);
            }
        });
        manageMenu.add(clientMenuItem);

        categorieMenuItem.setMnemonic('s');
        categorieMenuItem.setText("Categorie");
        categorieMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorieMenuItemActionPerformed(evt);
            }
        });
        manageMenu.add(categorieMenuItem);

        chambreMenuItem.setMnemonic('a');
        chambreMenuItem.setText("Chambre");
        chambreMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chambreMenuItemActionPerformed(evt);
            }
        });
        manageMenu.add(chambreMenuItem);

        reservationMenuItem.setMnemonic('x');
        reservationMenuItem.setText("Reservation");
        reservationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationMenuItemActionPerformed(evt);
            }
        });
        manageMenu.add(reservationMenuItem);

        menuBar.add(manageMenu);

        toolsMenu.setMnemonic('e');
        toolsMenu.setText("Outils");

        searchMenuItem.setText("Rechercher");
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(searchMenuItem);

        statsMenuItem.setText("Statistique");
        statsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(statsMenuItem);

        menuBar.add(toolsMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reservationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationMenuItemActionPerformed
        ReservationForm rf = new ReservationForm();
        desktopPane.add(rf);
        rf.setVisible(true);
    }//GEN-LAST:event_reservationMenuItemActionPerformed

    private void clientMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientMenuItemActionPerformed
        ClientForm cf = new ClientForm();
        desktopPane.add(cf);
        cf.setVisible(true);
    }//GEN-LAST:event_clientMenuItemActionPerformed

    private void categorieMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorieMenuItemActionPerformed
        CategorieForm gf = new CategorieForm();
        desktopPane.add(gf);
        gf.setVisible(true);
    }//GEN-LAST:event_categorieMenuItemActionPerformed

    private void chambreMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chambreMenuItemActionPerformed
        ChambreForm chf = new ChambreForm();
        desktopPane.add(chf);
        chf.setVisible(true);
    }//GEN-LAST:event_chambreMenuItemActionPerformed

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void statsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsMenuItemActionPerformed
        chs = new ChambreService();
        Map<String, Integer> categorieData = chs.getChambersCountByCategory();
        
        ChamberCategoryChartPage chartPage = new ChamberCategoryChartPage(categorieData);
        desktopPane.add(chartPage);
        chartPage.setVisible(true);
    }//GEN-LAST:event_statsMenuItemActionPerformed

    private void statsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsBtnActionPerformed
        statsMenuItem.doClick();
    }//GEN-LAST:event_statsBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        String PDF_PATH = "D:\\EMSI\\NetBeans\\Reservations";
        ReservationService rs = new ReservationService();
        String timestamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new java.util.Date());
        String fileName = PDF_PATH + "reservations_" + timestamp + ".pdf";
        
        try {
            Document document = new Document(PageSize.A4);
            PdfWriter.getInstance(document, new FileOutputStream(fileName));
            document.open();
            
            // Add header
            Font headerFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD);
            Paragraph header = new Paragraph("Rapport des Reservations", headerFont);
            header.setAlignment(Element.ALIGN_CENTER);
            document.add(header);
            document.add(new Paragraph("\n")); // Add spacing
            
            // Create table
            PdfPTable table = new PdfPTable(5); // 5 columns
            table.setWidthPercentage(100);
            
            // Add table headers
            Font tableHeader = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
            table.addCell(new PdfPCell(new Phrase("Client", tableHeader)));
            table.addCell(new PdfPCell(new Phrase("Chambre", tableHeader)));
            table.addCell(new PdfPCell(new Phrase("Date Debut", tableHeader)));
            table.addCell(new PdfPCell(new Phrase("Date Fin", tableHeader)));
            table.addCell(new PdfPCell(new Phrase("Categorie", tableHeader)));
            
            // Add reservation data
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Font contentFont = new Font(Font.FontFamily.HELVETICA, 11);
            
            for (Reservation reservation : rs.findAll()) {
                table.addCell(new Phrase(reservation.getClient().getNom(), contentFont));
                table.addCell(new Phrase(String.valueOf(reservation.getChambre()), contentFont));
                table.addCell(new Phrase(dateFormat.format(reservation.getDateDebut()), contentFont));
                table.addCell(new Phrase(dateFormat.format(reservation.getDateFin()), contentFont));
                table.addCell(new Phrase(String.valueOf(reservation.getChambre().getCat()), contentFont));
            }
            
            document.add(table);
            
            // Add footer with timestamp
            document.add(new Paragraph("\n"));
            Font footerFont = new Font(Font.FontFamily.HELVETICA, 8);
            Paragraph footer = new Paragraph("Generated on: " + 
                new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date()), 
                footerFont);
            footer.setAlignment(Element.ALIGN_RIGHT);
            document.add(footer);
            
            document.close();
            
            JOptionPane.showMessageDialog(this, 
                "PDF exported successfully to:\n" + fileName, 
                "Success", 
                JOptionPane.INFORMATION_MESSAGE);
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                "Error exporting PDF: " + ex.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_exportBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(
                Main.this,
                "Are you sure you want to log out?",
                "Confirm Logout",
                JOptionPane.YES_NO_OPTION
        );

        if (confirmation == JOptionPane.YES_OPTION) {
            dispose(); // Close the main window
            Authentification authWindow = new Authentification(); // Open the authentication window
            authWindow.setVisible(true);

            while (!authWindow.isAuthenticated) {
                try {
                    Thread.sleep(100); // Polling for authentication status
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }

            Main newMainApp = new Main();
            newMainApp.setVisible(true);
        }
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void quitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitBtnActionPerformed

    private void clientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientBtnActionPerformed
        ClientForm cf = new ClientForm();
        desktopPane.add(cf);
        cf.setVisible(true);
    }//GEN-LAST:event_clientBtnActionPerformed

    private void ChambreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChambreBtnActionPerformed
        ChambreForm chf = new ChambreForm();
        desktopPane.add(chf);
        chf.setVisible(true);
    }//GEN-LAST:event_ChambreBtnActionPerformed

    private void rsvBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rsvBtnActionPerformed
        ReservationForm rf = new ReservationForm();
        desktopPane.add(rf);
        rf.setVisible(true);
    }//GEN-LAST:event_rsvBtnActionPerformed

    private void catBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catBtnActionPerformed
        CategorieForm gf = new CategorieForm();
        desktopPane.add(gf);
        gf.setVisible(true);
    }//GEN-LAST:event_catBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        // Launch the authentication window
        Authentification authWindow = new Authentification();
        authWindow.setVisible(true);

        // Wait until the user is authenticated
        while (!authWindow.isAuthenticated) {
            try {
                Thread.sleep(100); // Polling for authentication status
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        // Launch the main application window
        Main mainApp = new Main();
        mainApp.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChambreBtn;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton catBtn;
    private javax.swing.JMenuItem categorieMenuItem;
    private javax.swing.JMenuItem chambreMenuItem;
    private javax.swing.JButton clientBtn;
    private javax.swing.JMenuItem clientMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JButton exportBtn;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JMenu manageMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton quitBtn;
    private javax.swing.JMenuItem reservationMenuItem;
    private javax.swing.JButton rsvBtn;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.border.SoftBevelBorder softBevelBorder1;
    private javax.swing.JButton statsBtn;
    private javax.swing.JMenuItem statsMenuItem;
    private javax.swing.JMenu toolsMenu;
    // End of variables declaration//GEN-END:variables

}
